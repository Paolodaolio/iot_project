[{"id":"e2ca67d7.a22dc8","type":"tab","label":"Challenge Flow","disabled":false,"info":""},{"id":"16c29822.262088","type":"inject","z":"e2ca67d7.a22dc8","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":140,"y":80,"wires":[["58326155.73e7f"]]},{"id":"58326155.73e7f","type":"file in","z":"e2ca67d7.a22dc8","name":"Read traffic.csv","filename":"C:\\Users\\User\\Desktop\\traffic_corretto.CSV","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":140,"y":120,"wires":[["c4ac5277.6de99"]]},{"id":"79d7a86e.d51538","type":"function","z":"e2ca67d7.a22dc8","name":"Filter by topic","func":"const hexToAscii = (s) => {\n    let hex  = s.toString();\n    let str = '';\n    for (let n = 0; n < hex.length; n += 2) {\n\t    str += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n    }\n    return str;\n}\n\nconst getOriginalMessage = (s, m) => {\n    let temp = s;\n    const test = `[${m}] `;\n    // String management to retrieve the original message\n    // This way I'm already filtering the Publish Messages \n    // because the Subscribes do not have any message\n    s = s\n    .substring(s.indexOf(test) + test.length)\n    .split(\",\")\n    .filter((el) => el.length > 0)\n    .map((e) => e.substring(e.lastIndexOf(\" \")))\n    .map((e) => e.trim());\n    s = s.length > 0 ? s[s.length - 1] : null;\n    if(s != null && s.length > 0) {\n        s = JSON.parse(hexToAscii(s));\n        // Use this for debug purposes\n        // node.warn(s);\n        return s;\n    } else return null;\n    \n    \n    return s.length > 0 ? s[s.length - 1] : null;\n}\n\nlet types = [];\nfor(let i=0; i<20; i++){\n    types = [...types, msg.payload[`m${i}`]];\n}\nconst allMessages = types.join(\",\");\n\nconst plc1 = \"factory/department1/section1/plc\";\nconst plc3 = \"factory/department3/section3/plc\";\nconst valve1 = \"factory/department1/section1/hydraulic_valve\";\nconst valve3 = \"factory/department3/section3/hydraulic_valve\";\nconst plcs = \"factory/all_departments/plc\";\nconst valves = \"factory/all_departments/hydraulic_valve\";\nlet canBeReturned = false;\nlet toRet = {};\n\nif(allMessages.includes(plc1)){\n    let o = getOriginalMessage(allMessages, plc1);\n    if(o !== null){\n        toRet.payload = o.value;\n        toRet.topic = plcs;\n        canBeReturned = true;\n    }\n}\nif(allMessages.includes(plc3)){\n    let o = getOriginalMessage(allMessages, plc3);\n    if(o !== null){\n        toRet.payload = o.value;\n        toRet.topic = plcs;\n        canBeReturned = true;\n    }\n}\nif(allMessages.includes(valve1)){\n    let o = getOriginalMessage(allMessages, valve1);\n    if (o !== null){\n        toRet.payload = o.value;\n        toRet.topic = valves;\n        canBeReturned = true;\n    }\n}\nif(allMessages.includes(valve3)){\n    let o = getOriginalMessage(allMessages, valve3);\n    if (o !== null) {\n        toRet.payload = o.value;\n        toRet.topic = valves;\n        canBeReturned = true;\n    }\n}\n\nif(canBeReturned){\n    return toRet;\n    // return msg;\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":140,"y":200,"wires":[["21ed149d.36c20c"]]},{"id":"20552204.41a27e","type":"delay","z":"e2ca67d7.a22dc8","name":"Delay MQTT messages","pauseType":"rate","timeout":"1","timeoutUnits":"minutes","rate":"1","nbRateUnits":"1","rateUnits":"minute","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":790,"y":240,"wires":[["bb218b13.d20e88","fe504d44.34a72"]]},{"id":"bb218b13.d20e88","type":"mqtt out","z":"e2ca67d7.a22dc8","name":"send mqtt","topic":"","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"9a12fb87.7c42c8","x":1000,"y":240,"wires":[]},{"id":"c4ac5277.6de99","type":"csv","z":"e2ca67d7.a22dc8","name":"Parse CSV string","sep":",","hdrin":false,"hdrout":"all","multi":"one","ret":"\\n","temp":"id,sourceIp,sourcePort,destIp,destPort,protocol,length,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15,m16,m17,m18,m19,m20","skip":"0","strings":true,"include_empty_strings":true,"include_null_values":true,"x":150,"y":160,"wires":[["79d7a86e.d51538"]]},{"id":"21ed149d.36c20c","type":"switch","z":"e2ca67d7.a22dc8","name":"Divide by topic","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"factory/all_departments/hydraulic_valve","vt":"str"},{"t":"eq","v":"factory/all_departments/plc","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":140,"y":240,"wires":[["2d523ef.f5a4bc2"],["d9b15e96.91758"]]},{"id":"2d523ef.f5a4bc2","type":"function","z":"e2ca67d7.a22dc8","name":"factory/all_departments/hydraulic_valve ","func":"const API_KEY = \"89JTIETKQII3HOHX\";\nconst CHANNEL_ID = \"1358479\";\nmsg.payload = `field2=${msg.payload}`;\nmsg.topic = `channels/${CHANNEL_ID}/publish/${API_KEY}`;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":460,"y":180,"wires":[["20552204.41a27e"]]},{"id":"d9b15e96.91758","type":"function","z":"e2ca67d7.a22dc8","name":"factory/all_departments/plc","func":"const API_KEY = \"89JTIETKQII3HOHX\";\nconst CHANNEL_ID = \"1358479\";\nmsg.payload = `field1=${msg.payload}`;\nmsg.topic = `channels/${CHANNEL_ID}/publish/${API_KEY}`;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":460,"y":300,"wires":[["20552204.41a27e"]]},{"id":"fe504d44.34a72","type":"debug","z":"e2ca67d7.a22dc8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1010,"y":340,"wires":[]},{"id":"9a12fb87.7c42c8","type":"mqtt-broker","name":"Thingspeak.com","broker":"mqtt.thingspeak.com","port":"1883","clientid":"","usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""}]