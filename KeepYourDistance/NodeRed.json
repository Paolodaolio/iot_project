[{"id":"b478ef03.0e2e8","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"2ceb6bc.0d58914","type":"tcp in","z":"b478ef03.0e2e8","name":"","server":"client","host":"localhost","port":"60002","datamode":"stream","datatype":"utf8","newline":"\\n","topic":"","base64":false,"x":203,"y":280,"wires":[["d5864978.92987"]]},{"id":"14cb0841.3905d8","type":"tcp in","z":"b478ef03.0e2e8","name":"","server":"client","host":"localhost","port":"60001","datamode":"stream","datatype":"utf8","newline":"\\n","topic":"","base64":false,"x":203,"y":240,"wires":[["d5864978.92987"]]},{"id":"a408eb1d.77bb78","type":"tcp in","z":"b478ef03.0e2e8","name":"","server":"client","host":"localhost","port":"60003","datamode":"stream","datatype":"utf8","newline":"\\n","topic":"","base64":false,"x":203,"y":320,"wires":[["d5864978.92987"]]},{"id":"efb52ab7.d58278","type":"tcp in","z":"b478ef03.0e2e8","name":"","server":"client","host":"localhost","port":"60004","datamode":"stream","datatype":"utf8","newline":"\\n","topic":"","base64":false,"x":203,"y":360,"wires":[["d5864978.92987"]]},{"id":"d4e80ebc.051088","type":"tcp in","z":"b478ef03.0e2e8","name":"","server":"client","host":"localhost","port":"60005","datamode":"stream","datatype":"utf8","newline":"\\n","topic":"","base64":false,"x":203,"y":400,"wires":[["d5864978.92987"]]},{"id":"d5864978.92987","type":"function","z":"b478ef03.0e2e8","name":"Parser","func":"const MSTR = \"MOTE# \", CSTR = \"counter \", DATA = \"data\";\nconst THRESHOLD = 1073741824000;\n//node.warn(msg.payload);\nif(msg.payload.includes(\"met\")){\n    // Retrieve info from the message passed from the motes\n    let firstIndexOfMote = msg.payload.indexOf(MSTR) + MSTR.length;\n    let from = parseInt(msg.payload\n            .substring(firstIndexOfMote, msg.payload.indexOf(\" \", firstIndexOfMote + 1))\n            .trim()\n            .replace(/\\D/g,''));\n\n    let lastIndexOfMote = msg.payload.lastIndexOf(MSTR) + MSTR.length;\n    let to = parseInt(msg.payload\n            .substring(lastIndexOfMote, msg.payload.indexOf(\" \", lastIndexOfMote + 1))\n            .trim()\n            .replace(/\\D/g,''));\n            \n    let counter = parseInt(msg.payload\n            .substring(msg.payload.lastIndexOf(\" \"))\n            .trim()\n            .replace(/\\D/g,''));\n    //node.warn(`from: ${from}\\nto: ${to}\\ncounter: ${counter}\\n`);\n    // Get the context data\n    let data = context.get(DATA) || {};\n    let dataId = from < to ? `${from}_${to}` : `${to}_${from}`;\n    // Get the context data relative to that encounter\n    let encounterData = data[dataId] || {};\n    \n    if(encounterData.from === null || encounterData.from === undefined){\n        encounterData.from = from;\n        encounterData.counter = 1;\n        encounterData.lastmsg = counter;\n    }\n    else if (encounterData.from == from){\n        if( (encounterData.lastmsg +1) % Math.pow(2,32) == counter){\n            if((Date.now() - encounterData.time)  >= THRESHOLD) {\n                // lost packets, probably going around\n                encounterData.counter = 1;\n            } else {\n                encounterData.counter ++;\n            }\n        }\n        else{\n            encounterData.counter = 1;\n        }\n        encounterData.lastmsg = counter;\n        if(encounterData.counter >= 10) {\n            msg.payload = {\"value1\" : from, \"value2\": to};\n            msg.event = \"proximity_detected\";\n        }\n    }\n    encounterData.time = Date.now();\n    node.warn(encounterData);\n    \n    data[dataId] = encounterData;\n    context.set(DATA, data);\n}\nreturn msg;","outputs":1,"noerr":0,"x":420,"y":320,"wires":[["75a39e7a.147438","973d4a56.19816"]]},{"id":"75a39e7a.147438","type":"switch","z":"b478ef03.0e2e8","name":"Debug Switch","property":"event","propertyType":"msg","rules":[{"t":"eq","v":"undefined","vt":"str"},{"t":"neq","v":"undefined","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":580,"y":320,"wires":[["d824acdd.a1ac3"],["4b69efe9.2f8ab8"]]},{"id":"d824acdd.a1ac3","type":"debug","z":"b478ef03.0e2e8","name":"Debug Sink","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":800,"y":180,"wires":[]},{"id":"e1914d04.892b8","type":"http request","z":"b478ef03.0e2e8","name":"Send POST to IFTTT","method":"POST","ret":"txt","url":"https://maker.ifttt.com/trigger/{{event}}/with/key/bFHjcBZO8AsG4DCDVsZbol","tls":"","x":1120,"y":400,"wires":[[]]},{"id":"4b69efe9.2f8ab8","type":"delay","z":"b478ef03.0e2e8","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":760,"y":340,"wires":[["e1914d04.892b8"]]},{"id":"973d4a56.19816","type":"debug","z":"b478ef03.0e2e8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"debugStr","x":570,"y":120,"wires":[]}]
